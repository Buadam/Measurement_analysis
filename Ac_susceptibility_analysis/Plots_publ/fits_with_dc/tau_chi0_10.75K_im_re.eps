%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.32.0 (http://poppler.freedesktop.org)
%%Creator: \050MATLAB, The Mathworks, Inc. Version 9.2.0.556344 \\(R2017a\\). Operating System: Windows 8)
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 217 161
%%HiResBoundingBox: 0 0 216.97 160.77
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font JDJVMH+Helvetica
%!FontType1-1.0: JDJVMH+Helvetica
12 dict begin
/FontInfo 10 dict dup begin
/Notice (\(URW\)++,Copyright 2014 by \(URW\)++ Design & Development) readonly def
/Copyright (Copyright \(URW\)++,Copyright 2014 by \(URW\)++ Design & Develo\
pment) readonly def
/FullName (Nimbus Sans) readonly def
/FamilyName (Nimbus Sans) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /JDJVMH+Helvetica def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [0 -23 520 709] readonly def
/StrokeWidth 0 def
/UniqueID 5020902 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 45 /hyphen put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF6
FB39B30D1F8747CF302EAFC179F06E5D11CA91CAEA8FCFBD092B731BA50E976C
F2D1A3FF361A646D1AB184595395D06D0878AE6DA2830430C83E8A6F61D9C1AB
323A763E8DCB87DED77B64ECD6E54D27713CBE688F97C3D0D572DE54533F350A
3DFCA7EDEBD95AC766ADE5153675C5188AAEAAC295EE1E07041BDE7CB519D99B
07201F5A59CC5E0029181B74ABBAD2965C015B331EABDBC70BB34D4DC40AAAB6
38C9D6216EE4AFC8DA7D41471DB47BC75A54121894B99B431AEC9DB2319927AE
40820A85A6FCC7E3F9B15CFE5069DB51A521B9162E00E5B0EB7FF08DB2F66F36
D446ECFC2E3FE10B7C557E0BB37D9B2B0A803F0C5BB60D86954AA347DB9F52D9
A44E4038973B8AEE662D23FC1580C99E4022AFD712D9A9FA182AA0C91D3FB786
1286A2C8A296A8A193BABF5630A8A2DB6FE0050F10543D51B9A2BE3EECA6C73F
0DA167D69E2FA8E9FFAD571FE088F941CD521397C099B9B12456694A32EA90AE
5E8A62FB857E11308E0962E5F28FE5C98452FDF992880DB55ABFF0CEDC7922A4
307603B524702BC38CE455BDAE476F7C8241762DDA58EA967E6CE0280301B0B2
F27B9FF36C479A24D9FDB8D89547B2B7F93A5CDEC5FC4E29A3E3E915567BC77A
5680B4A3A477C9A6AD021AB204B980E5914CBC0AAA296FD45748021B437E5ED9
9240D2CBFAC569D4CC41B2FE113C184789972B4F212710296D3DC7A2E33C912C
C320A0C6AA8373ECBAA4B01B93621A7FAE39C3B07B2CFCCD0118AB62A26B1207
14EEFF462714CE31DE233BCD9020D3F3340B8AD2BF134D9C1E8163D28F079BB5
4AF3FB5DEBA7E62F7A0115FCBD183E4A0A31E9C2ADD476CC3F49D21BEDA97C39
CECF42C7D84429ABF482F7D8EC9304719B7BD65C0D12E7DBC9A4F867B7836426
D8A23E7331FEBB69588CE6DEB93E7170BCCEBCD1D874C74A39E520693397A852
C236DF775E80CB622D761EE7808B025202316080FB6835E67CDD8BC946425D7B
4071333D1D825DF9072E65F6748B71BAD60B440B4B5CA80A717508733077CAB1
60DEE71E180571AF9F6F539939663AD2FEE8613FFCD42D7EB1A33C128553C352
35701BA206F874E1F746125007525CE013D0D6FD8009424A075BC714F8106B5B
B9C55FEADE51BF3257F94D11391861A31A6956D6B4050107AFD3DA2B3A80F831
240712BD9DBF950955C886E38BF7AEEC8CB155AAFC1830E543DDCF736CE43678
76CB83B9154786755884FF06E38B878088B794DF220BEAD9237BF1A700C51DE9
4FF1AC0D6E8CEC92CC5672D22DC13286B6ACEBC3D8810F7DAFC5C39D20B3058D
00AAAA2F51365C60FB0F13A71FB04FBD746EAFF038E61C5E8A28F90652ACC623
7BBA705749F70BEE49616264B069F841BD2025E2424C20DC0FEC1A32B314EC8D
33435A17BFF9FFF48BE29231C7E72162FF4888E522B3EB7813
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F8_0 /JDJVMH+Helvetica 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 216.97 160.77 re
W
q
q
[0.1 0 0 0.1 0 0] cm
/DeviceGray {} cs
[1] sc
-102.75 -19.9414 2267.73 1700.77 re
f
-102.75 -19.9414 2267.73 1700.77 re
f
191.996 160.352 1762.45 1394.27 re
f
5.00841 w
2 J
1 j
/DeviceGray {} CS
[0.1489] SC
q
[1.00045 0 0 -0.999551 0 0] cm
191.91 -160.424 m
1953.57 -160.424 l
S
Q
q
[1.00045 0 0 -0.999551 0 0] cm
246.959 -160.424 m
246.959 -178.041 l
S
Q
q
[1.00045 0 0 -0.999551 0 0] cm
522.226 -160.424 m
522.226 -178.041 l
S
Q
q
[1.00045 0 0 -0.999551 0 0] cm
797.482 -160.424 m
797.482 -178.041 l
S
Q
q
[1.00045 0 0 -0.999551 0 0] cm
1072.74 -160.424 m
1072.74 -178.041 l
S
Q
q
[1.00045 0 0 -0.999551 0 0] cm
1348 -160.424 m
1348 -178.041 l
S
Q
q
[1.00045 0 0 -0.999551 0 0] cm
1623.26 -160.424 m
1623.26 -178.041 l
S
Q
q
[1.00045 0 0 -0.999551 0 0] cm
1898.52 -160.424 m
1898.52 -178.041 l
S
Q
/DeviceGray {} cs
[0.1489] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1.0009 0 0 1 20.1957 4.01445] Tm
0 0 Td
/F8_0 8.01287 Tf
(25)
[4.455156
0
4.455156
0] Tj
-2321.67 TJm
(30)
[4.455156
0
4.455156
0] Tj
-2321.62 TJm
(35)
[4.455156
0
4.455156
0] Tj
-2321.67 TJm
(40)
[4.455156
0
4.455156
0] Tj
-2321.67 TJm
(45)
[4.455156
0
4.455156
0] Tj
-2321.67 TJm
(50)
[4.455156
0
4.455156
0] Tj
-2321.62 TJm
(55)
[4.455156
0
4.455156
0] Tj
Q
/DeviceGray {} CS
[0] SC
q
[1.00045 0 0 -0.999551 0 0] cm
191.91 -160.424 m
191.91 -1555.32 l
S
Q
q
[1.00045 0 0 -0.999551 0 0] cm
191.91 -160.424 m
209.527 -160.424 l
S
Q
q
[1.00045 0 0 -0.999551 0 0] cm
191.91 -359.697 m
209.527 -359.697 l
S
Q
q
[1.00045 0 0 -0.999551 0 0] cm
191.91 -558.97 m
209.527 -558.97 l
S
Q
q
[1.00045 0 0 -0.999551 0 0] cm
191.91 -758.243 m
209.527 -758.243 l
S
Q
q
[1.00045 0 0 -0.999551 0 0] cm
191.91 -957.508 m
209.527 -957.508 l
S
Q
q
[1.00045 0 0 -0.999551 0 0] cm
191.91 -1156.78 m
209.527 -1156.78 l
S
Q
q
[1.00045 0 0 -0.999551 0 0] cm
191.91 -1356.05 m
209.527 -1356.05 l
S
Q
q
[1.00045 0 0 -0.999551 0 0] cm
191.91 -1555.32 m
209.527 -1555.32 l
S
Q
q
[1.00045 0 0 -0.999551 0 0] cm
191.91 -160.424 m
200.718 -160.424 l
S
Q
q
[1.00045 0 0 -0.999551 0 0] cm
191.91 -220.411 m
200.718 -220.411 l
S
Q
q
[1.00045 0 0 -0.999551 0 0] cm
191.91 -255.501 m
200.718 -255.501 l
S
Q
q
[1.00045 0 0 -0.999551 0 0] cm
191.91 -280.399 m
200.718 -280.399 l
S
Q
q
[1.00045 0 0 -0.999551 0 0] cm
191.91 -299.709 m
200.718 -299.709 l
S
Q
q
[1.00045 0 0 -0.999551 0 0] cm
191.91 -315.485 m
200.718 -315.485 l
S
Q
q
[1.00045 0 0 -0.999551 0 0] cm
191.91 -328.827 m
200.718 -328.827 l
S
Q
q
[1.00045 0 0 -0.999551 0 0] cm
191.91 -340.383 m
200.718 -340.383 l
S
Q
q
[1.00045 0 0 -0.999551 0 0] cm
191.91 -350.575 m
200.718 -350.575 l
S
Q
q
[1.00045 0 0 -0.999551 0 0] cm
191.91 -359.697 m
200.718 -359.697 l
S
Q
q
[1.00045 0 0 -0.999551 0 0] cm
191.91 -419.685 m
200.718 -419.685 l
S
Q
q
[1.00045 0 0 -0.999551 0 0] cm
191.91 -454.771 m
200.718 -454.771 l
S
Q
q
[1.00045 0 0 -0.999551 0 0] cm
191.91 -479.669 m
200.718 -479.669 l
S
Q
q
[1.00045 0 0 -0.999551 0 0] cm
191.91 -498.982 m
200.718 -498.982 l
S
Q
q
[1.00045 0 0 -0.999551 0 0] cm
191.91 -514.759 m
200.718 -514.759 l
S
Q
q
[1.00045 0 0 -0.999551 0 0] cm
191.91 -528.1 m
200.718 -528.1 l
S
Q
q
[1.00045 0 0 -0.999551 0 0] cm
191.91 -539.656 m
200.718 -539.656 l
S
Q
q
[1.00045 0 0 -0.999551 0 0] cm
191.91 -549.848 m
200.718 -549.848 l
S
Q
q
[1.00045 0 0 -0.999551 0 0] cm
191.91 -558.97 m
200.718 -558.97 l
S
Q
q
[1.00045 0 0 -0.999551 0 0] cm
191.91 -618.954 m
200.718 -618.954 l
S
Q
q
[1.00045 0 0 -0.999551 0 0] cm
191.91 -654.044 m
200.718 -654.044 l
S
Q
q
[1.00045 0 0 -0.999551 0 0] cm
191.91 -678.942 m
200.718 -678.942 l
S
Q
q
[1.00045 0 0 -0.999551 0 0] cm
191.91 -698.255 m
200.718 -698.255 l
S
Q
q
[1.00045 0 0 -0.999551 0 0] cm
191.91 -714.032 m
200.718 -714.032 l
S
Q
q
[1.00045 0 0 -0.999551 0 0] cm
191.91 -727.374 m
200.718 -727.374 l
S
Q
q
[1.00045 0 0 -0.999551 0 0] cm
191.91 -738.929 m
200.718 -738.929 l
S
Q
q
[1.00045 0 0 -0.999551 0 0] cm
191.91 -749.122 m
200.718 -749.122 l
S
Q
q
[1.00045 0 0 -0.999551 0 0] cm
191.91 -758.243 m
200.718 -758.243 l
S
Q
q
[1.00045 0 0 -0.999551 0 0] cm
191.91 -818.227 m
200.718 -818.227 l
S
Q
q
[1.00045 0 0 -0.999551 0 0] cm
191.91 -853.317 m
200.718 -853.317 l
S
Q
q
[1.00045 0 0 -0.999551 0 0] cm
191.91 -878.215 m
200.718 -878.215 l
S
Q
q
[1.00045 0 0 -0.999551 0 0] cm
191.91 -897.52 m
200.718 -897.52 l
S
Q
q
[1.00045 0 0 -0.999551 0 0] cm
191.91 -913.305 m
200.718 -913.305 l
S
Q
q
[1.00045 0 0 -0.999551 0 0] cm
191.91 -926.647 m
200.718 -926.647 l
S
Q
q
[1.00045 0 0 -0.999551 0 0] cm
191.91 -938.203 m
200.718 -938.203 l
S
Q
q
[1.00045 0 0 -0.999551 0 0] cm
191.91 -948.391 m
200.718 -948.391 l
S
Q
q
[1.00045 0 0 -0.999551 0 0] cm
191.91 -957.508 m
200.718 -957.508 l
S
Q
q
[1.00045 0 0 -0.999551 0 0] cm
191.91 -1017.5 m
200.718 -1017.5 l
S
Q
q
[1.00045 0 0 -0.999551 0 0] cm
191.91 -1052.59 m
200.718 -1052.59 l
S
Q
q
[1.00045 0 0 -0.999551 0 0] cm
191.91 -1077.48 m
200.718 -1077.48 l
S
Q
q
[1.00045 0 0 -0.999551 0 0] cm
191.91 -1096.79 m
200.718 -1096.79 l
S
Q
q
[1.00045 0 0 -0.999551 0 0] cm
191.91 -1112.58 m
200.718 -1112.58 l
S
Q
q
[1.00045 0 0 -0.999551 0 0] cm
191.91 -1125.91 m
200.718 -1125.91 l
S
Q
q
[1.00045 0 0 -0.999551 0 0] cm
191.91 -1137.47 m
200.718 -1137.47 l
S
Q
q
[1.00045 0 0 -0.999551 0 0] cm
191.91 -1147.66 m
200.718 -1147.66 l
S
Q
q
[1.00045 0 0 -0.999551 0 0] cm
191.91 -1156.78 m
200.718 -1156.78 l
S
Q
q
[1.00045 0 0 -0.999551 0 0] cm
191.91 -1216.77 m
200.718 -1216.77 l
S
Q
q
[1.00045 0 0 -0.999551 0 0] cm
191.91 -1251.86 m
200.718 -1251.86 l
S
Q
q
[1.00045 0 0 -0.999551 0 0] cm
191.91 -1276.75 m
200.718 -1276.75 l
S
Q
q
[1.00045 0 0 -0.999551 0 0] cm
191.91 -1296.07 m
200.718 -1296.07 l
S
Q
q
[1.00045 0 0 -0.999551 0 0] cm
191.91 -1311.84 m
200.718 -1311.84 l
S
Q
q
[1.00045 0 0 -0.999551 0 0] cm
191.91 -1325.18 m
200.718 -1325.18 l
S
Q
q
[1.00045 0 0 -0.999551 0 0] cm
191.91 -1336.74 m
200.718 -1336.74 l
S
Q
q
[1.00045 0 0 -0.999551 0 0] cm
191.91 -1346.94 m
200.718 -1346.94 l
S
Q
q
[1.00045 0 0 -0.999551 0 0] cm
191.91 -1356.05 m
200.718 -1356.05 l
S
Q
q
[1.00045 0 0 -0.999551 0 0] cm
191.91 -1416.04 m
200.718 -1416.04 l
S
Q
q
[1.00045 0 0 -0.999551 0 0] cm
191.91 -1451.13 m
200.718 -1451.13 l
S
Q
q
[1.00045 0 0 -0.999551 0 0] cm
191.91 -1476.03 m
200.718 -1476.03 l
S
Q
q
[1.00045 0 0 -0.999551 0 0] cm
191.91 -1495.34 m
200.718 -1495.34 l
S
Q
q
[1.00045 0 0 -0.999551 0 0] cm
191.91 -1511.12 m
200.718 -1511.12 l
S
Q
q
[1.00045 0 0 -0.999551 0 0] cm
191.91 -1524.46 m
200.718 -1524.46 l
S
Q
q
[1.00045 0 0 -0.999551 0 0] cm
191.91 -1536.01 m
200.718 -1536.01 l
S
Q
q
[1.00045 0 0 -0.999551 0 0] cm
191.91 -1546.2 m
200.718 -1546.2 l
S
Q
q
[1.00045 0 0 -0.999551 0 0] cm
191.91 -1555.32 m
200.718 -1555.32 l
S
Q
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1.0009 0 0 1 0.552344 11.2262] Tm
0 0 Td
/F8_0 8.01287 Tf
(10)
[4.455156
0
4.455156
0] Tj
[1.0009 0 0 1 9.57539 14.832] Tm
0 0 Td
/F8_0 6.41065 Tf
(-4)
[2.134746
0
3.564321
0] Tj
[1.0009 0 0 1 0.552344 31.0586] Tm
0 0 Td
/F8_0 8.01287 Tf
(10)
[4.455156
0
4.455156
0] Tj
[1.0009 0 0 1 9.57539 34.6645] Tm
0 0 Td
/F8_0 6.41065 Tf
(-3)
[2.134746
0
3.564321
0] Tj
[1.0009 0 0 1 0.552344 50.891] Tm
0 0 Td
/F8_0 8.01287 Tf
(10)
[4.455156
0
4.455156
0] Tj
[1.0009 0 0 1 9.57539 54.4969] Tm
0 0 Td
/F8_0 6.41065 Tf
(-2)
[2.134746
0
3.564321
0] Tj
[1.0009 0 0 1 0.552344 70.7234] Tm
0 0 Td
/F8_0 8.01287 Tf
(10)
[4.455156
0
4.455156
0] Tj
[1.0009 0 0 1 9.57539 74.3297] Tm
0 0 Td
/F8_0 6.41065 Tf
(-1)
[2.134746
0
3.564321
0] Tj
[1.0009 0 0 1 2.35703 91.157] Tm
0 0 Td
/F8_0 8.01287 Tf
(10)
[4.455156
0
4.455156
0] Tj
[1.0009 0 0 1 11.3797 94.7629] Tm
0 0 Td
/F8_0 6.41065 Tf
(0)
[3.564321
0] Tj
[1.0009 0 0 1 2.35703 110.989] Tm
0 0 Td
/F8_0 8.01287 Tf
(10)
[4.455156
0
4.455156
0] Tj
[1.0009 0 0 1 11.3797 114.595] Tm
0 0 Td
/F8_0 6.41065 Tf
(1)
[3.564321
0] Tj
[1.0009 0 0 1 2.35703 130.822] Tm
0 0 Td
/F8_0 8.01287 Tf
(10)
[4.455156
0
4.455156
0] Tj
[1.0009 0 0 1 11.3797 134.428] Tm
0 0 Td
/F8_0 6.41065 Tf
(2)
[3.564321
0] Tj
[1.0009 0 0 1 2.35703 150.655] Tm
0 0 Td
/F8_0 8.01287 Tf
(10)
[4.455156
0
4.455156
0] Tj
[1.0009 0 0 1 11.3797 154.261] Tm
0 0 Td
/F8_0 6.41065 Tf
(3)
[3.564321
0] Tj
Q
0 J
q
[1.00045 0 0 -0.999551 0 0] cm
191.91 -1431.81 m
302.017 -1438.75 l
412.12 -1445.16 l
522.226 -1451.13 l
632.325 -1456.71 l
1292.95 -1484.28 l
1403.06 -1488.12 l
1513.16 -1491.8 l
1623.26 -1495.34 l
1733.37 -1498.74 l
1843.47 -1502 l
1953.57 -1505.14 l
S
Q
208.703 1431.17 m
208.703 1421.95 201.223 1414.48 191.996 1414.48 c
182.766 1414.48 175.285 1421.95 175.285 1431.17 c
175.285 1440.39 182.766 1447.87 191.996 1447.87 c
201.223 1447.87 208.703 1440.39 208.703 1431.17 c
f
318.859 1438.1 m
318.859 1428.88 311.375 1421.4 302.148 1421.4 c
292.922 1421.4 285.438 1428.88 285.438 1438.1 c
285.438 1447.32 292.922 1454.79 302.148 1454.79 c
311.375 1454.79 318.859 1447.32 318.859 1438.1 c
f
429.012 1444.51 m
429.012 1435.29 421.527 1427.81 412.301 1427.81 c
403.074 1427.81 395.59 1435.29 395.59 1444.51 c
395.59 1453.73 403.074 1461.2 412.301 1461.2 c
421.527 1461.2 429.012 1453.73 429.012 1444.51 c
f
539.164 1450.48 m
539.164 1441.26 531.68 1433.78 522.453 1433.78 c
513.227 1433.78 505.742 1441.26 505.742 1450.48 c
505.742 1459.7 513.227 1467.17 522.453 1467.17 c
531.68 1467.17 539.164 1459.7 539.164 1450.48 c
f
649.316 1456.06 m
649.316 1446.84 641.832 1439.36 632.605 1439.36 c
623.379 1439.36 615.895 1446.84 615.895 1456.06 c
615.895 1465.28 623.379 1472.75 632.605 1472.75 c
641.832 1472.75 649.316 1465.28 649.316 1456.06 c
f
1310.23 1483.61 m
1310.23 1474.39 1302.75 1466.91 1293.52 1466.91 c
1284.29 1466.91 1276.81 1474.39 1276.81 1483.61 c
1276.81 1492.82 1284.29 1500.3 1293.52 1500.3 c
1302.75 1500.3 1310.23 1492.82 1310.23 1483.61 c
f
1420.38 1487.45 m
1420.38 1478.23 1412.9 1470.76 1403.68 1470.76 c
1394.45 1470.76 1386.96 1478.23 1386.96 1487.45 c
1386.96 1496.67 1394.45 1504.15 1403.68 1504.15 c
1412.9 1504.15 1420.38 1496.67 1420.38 1487.45 c
f
1530.54 1491.13 m
1530.54 1481.91 1523.05 1474.44 1513.83 1474.44 c
1504.6 1474.44 1497.12 1481.91 1497.12 1491.13 c
1497.12 1500.35 1504.6 1507.83 1513.83 1507.83 c
1523.05 1507.83 1530.54 1500.35 1530.54 1491.13 c
f
1640.69 1494.66 m
1640.69 1485.45 1633.21 1477.97 1623.98 1477.97 c
1614.75 1477.97 1607.27 1485.45 1607.27 1494.66 c
1607.27 1503.88 1614.75 1511.36 1623.98 1511.36 c
1633.21 1511.36 1640.69 1503.88 1640.69 1494.66 c
f
1750.84 1498.06 m
1750.84 1488.84 1743.36 1481.36 1734.13 1481.36 c
1724.91 1481.36 1717.42 1488.84 1717.42 1498.06 c
1717.42 1507.28 1724.91 1514.75 1734.13 1514.75 c
1743.36 1514.75 1750.84 1507.28 1750.84 1498.06 c
f
1861 1501.32 m
1861 1492.1 1853.51 1484.63 1844.29 1484.63 c
1835.06 1484.63 1827.57 1492.1 1827.57 1501.32 c
1827.57 1510.54 1835.06 1518.02 1844.29 1518.02 c
1853.51 1518.02 1861 1510.54 1861 1501.32 c
f
1971.15 1504.47 m
1971.15 1495.25 1963.66 1487.77 1954.44 1487.77 c
1945.21 1487.77 1937.73 1495.25 1937.73 1504.47 c
1937.73 1513.69 1945.21 1521.16 1954.44 1521.16 c
1963.66 1521.16 1971.15 1513.69 1971.15 1504.47 c
f
[60.125 36.075] 0 d
2 j
/DeviceRGB {} CS
[0 0 1] SC
q
[1.00045 0 0 -0.999551 0 0] cm
191.91 -1156.78 m
1953.57 -1156.78 l
S
Q
/DeviceRGB {} CS
[0 0.5019 1] SC
q
[1.00045 0 0 -0.999551 0 0] cm
191.91 -957.461 m
1953.57 -957.461 l
S
Q
/DeviceRGB {} CS
[0 1 1] SC
q
[1.00045 0 0 -0.999551 0 0] cm
191.91 -758.247 m
1953.57 -758.247 l
S
Q
/DeviceRGB {} CS
[0.5019 1 0.5019] SC
q
[1.00045 0 0 -0.999551 0 0] cm
191.91 -628.059 m
1953.57 -628.059 l
S
Q
/DeviceRGB {} CS
[1 1 0] SC
q
[1.00045 0 0 -0.999551 0 0] cm
191.91 -550.689 m
1953.57 -550.689 l
S
Q
/DeviceRGB {} CS
[1 0.5019 0] SC
q
[1.00045 0 0 -0.999551 0 0] cm
191.91 -419.911 m
1953.57 -419.911 l
S
Q
/DeviceRGB {} CS
[1 0 0] SC
q
[1.00045 0 0 -0.999551 0 0] cm
191.91 -359.923 m
1953.57 -359.923 l
S
Q
[] 0 d
2 J
1 j
/DeviceGray {} CS
[0.7012] SC
q
[1.00045 0 0 -0.999551 0 0] cm
1953.57 -160.424 m
1953.57 -1555.32 l
S
Q
q
[1.00045 0 0 -0.999551 0 0] cm
1953.57 -880.313 m
1935.95 -880.313 l
S
Q
/DeviceGray {} cs
[0.7012] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1.0009 0 0 1 199.053 84.6859] Tm
0 0 Td
/F8_0 8.01287 Tf
(1.5)
[4.455156
0
2.227578
0
4.455156
0] Tj
Q
1965.9 24.3672 m
1965.9 24.7422 1966.03 25.1211 1966.28 25.4961 c
1982.54 41.6445 l
1966.28 57.8906 l
1966.03 58.1406 1965.9 58.4844 1965.9 58.9219 c
1965.9 59.3008 1966.06 59.6602 1966.37 60.0039 c
1966.69 60.3477 1967.07 60.5234 1967.5 60.5234 c
1967.88 60.5234 1968.29 60.332 1968.72 59.957 c
1984.89 43.8008 l
2000.96 59.957 l
2001.4 60.332 2001.78 60.5234 2002.09 60.5234 c
2002.53 60.5234 2002.9 60.3672 2003.21 60.0547 c
2003.53 59.7383 2003.69 59.3594 2003.69 58.9219 c
2003.69 58.4844 2003.56 58.1406 2003.31 57.8906 c
1987.05 41.6445 l
2003.31 25.4961 l
2003.56 25.1211 2003.69 24.7422 2003.69 24.3672 c
2003.69 23.9297 2003.53 23.5547 2003.21 23.2422 c
2002.9 22.9258 2002.53 22.7695 2002.09 22.7695 c
2001.71 22.7695 2001.34 22.957 2000.96 23.332 c
1984.89 39.4883 l
1968.72 23.332 l
1968.29 22.957 1967.88 22.7695 1967.5 22.7695 c
1967.07 22.7695 1966.69 22.9414 1966.37 23.2852 c
1966.06 23.6289 1965.9 23.9883 1965.9 24.3672 c
f
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1.0009 0 0 1 202.061 2.21133] Tm
0 0 Td
/F8_0 8.01287 Tf
(10)
[4.455156
0
4.455156
0] Tj
[1.0009 0 0 1 211.083 5.81719] Tm
0 0 Td
/F8_0 6.41065 Tf
(4)
[3.564321
0] Tj
Q
0 J
q
[1.00045 0 0 -0.999551 0 0] cm
191.91 -1271.71 m
302.017 -1375.73 l
412.12 -1156.41 l
522.226 -1087.91 l
632.325 -1277.74 l
1292.95 -850.159 l
1403.06 -766.657 l
1513.16 -560.654 l
1623.26 -421.697 l
1733.37 -349.739 l
1843.47 -285.495 l
1953.57 -324.357 l
S
Q
208.703 1271.13 m
208.703 1261.91 201.223 1254.44 191.996 1254.44 c
182.766 1254.44 175.285 1261.91 175.285 1271.13 c
175.285 1280.35 182.766 1287.83 191.996 1287.83 c
201.223 1287.83 208.703 1280.35 208.703 1271.13 c
f
318.859 1375.12 m
318.859 1365.9 311.375 1358.42 302.148 1358.42 c
292.922 1358.42 285.438 1365.9 285.438 1375.12 c
285.438 1384.34 292.922 1391.81 302.148 1391.81 c
311.375 1391.81 318.859 1384.34 318.859 1375.12 c
f
429.012 1155.89 m
429.012 1146.66 421.527 1139.19 412.301 1139.19 c
403.074 1139.19 395.59 1146.66 395.59 1155.89 c
395.59 1165.11 403.074 1172.58 412.301 1172.58 c
421.527 1172.58 429.012 1165.11 429.012 1155.89 c
f
539.164 1087.42 m
539.164 1078.2 531.68 1070.72 522.453 1070.72 c
513.227 1070.72 505.742 1078.2 505.742 1087.42 c
505.742 1096.64 513.227 1104.11 522.453 1104.11 c
531.68 1104.11 539.164 1096.64 539.164 1087.42 c
f
649.316 1277.16 m
649.316 1267.94 641.832 1260.46 632.605 1260.46 c
623.379 1260.46 615.895 1267.94 615.895 1277.16 c
615.895 1286.38 623.379 1293.86 632.605 1293.86 c
641.832 1293.86 649.316 1286.38 649.316 1277.16 c
f
1310.23 849.773 m
1310.23 840.555 1302.75 833.078 1293.52 833.078 c
1284.29 833.078 1276.81 840.555 1276.81 849.773 c
1276.81 858.992 1284.29 866.469 1293.52 866.469 c
1302.75 866.469 1310.23 858.992 1310.23 849.773 c
f
1420.38 766.305 m
1420.38 757.086 1412.9 749.609 1403.68 749.609 c
1394.45 749.609 1386.96 757.086 1386.96 766.305 c
1386.96 775.523 1394.45 783 1403.68 783 c
1412.9 783 1420.38 775.523 1420.38 766.305 c
f
1530.54 560.391 m
1530.54 551.172 1523.05 543.699 1513.83 543.699 c
1504.6 543.699 1497.12 551.172 1497.12 560.391 c
1497.12 569.613 1504.6 577.086 1513.83 577.086 c
1523.05 577.086 1530.54 569.613 1530.54 560.391 c
f
1640.69 421.496 m
1640.69 412.277 1633.21 404.801 1623.98 404.801 c
1614.75 404.801 1607.27 412.277 1607.27 421.496 c
1607.27 430.715 1614.75 438.191 1623.98 438.191 c
1633.21 438.191 1640.69 430.715 1640.69 421.496 c
f
1750.84 349.574 m
1750.84 340.355 1743.36 332.879 1734.13 332.879 c
1724.91 332.879 1717.42 340.355 1717.42 349.574 c
1717.42 358.793 1724.91 366.27 1734.13 366.27 c
1743.36 366.27 1750.84 358.793 1750.84 349.574 c
f
1861 285.359 m
1861 276.141 1853.51 268.664 1844.29 268.664 c
1835.06 268.664 1827.57 276.141 1827.57 285.359 c
1827.57 294.578 1835.06 302.055 1844.29 302.055 c
1853.51 302.055 1861 294.578 1861 285.359 c
f
1971.15 324.195 m
1971.15 314.977 1963.66 307.5 1954.44 307.5 c
1945.21 307.5 1937.73 314.977 1937.73 324.195 c
1937.73 333.414 1945.21 340.891 1954.44 340.891 c
1963.66 340.891 1971.15 333.414 1971.15 324.195 c
f
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font JDJVMH+Helvetica
%%EOF
